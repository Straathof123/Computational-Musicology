geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Reverse Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = 1 - d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Reverse Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Reverse Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Reverse Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
library(tidyverse)
library(tidymodels)
library(compmus)
library(heatmaply)
library(protoclust)
library(cowplot)
library(spotifyr)
library(ggplot2)
library(plotly)
library(dplyr)
djesse1 <- get_playlist_audio_features("", "55AhOVOznsMmppxhkhQeox")
djesse2 <- get_playlist_audio_features("", "2ySg6xH1guPJ6WacYBnEtE")
djesse3 <- get_playlist_audio_features("", "4y0xPsPUbwmsf32r8GiETo")
djesse4 <- get_playlist_audio_features("", "23CJn0kvWIvoEg6VlbGeGl")
all_albums <- bind_rows(djesse1, djesse2, djesse3, djesse4)
circshift <- function(v, n) {
if (n == 0) v else c(tail(v, n), head(v, -n))
}
#      C     C#    D     Eb    E     F     F#    G     Ab    A     Bb    B
major_chord <-
c(   1,    0,    0,    0,    1,    0,    0,    1,    0,    0,    0,    0)
minor_chord <-
c(   1,    0,    0,    1,    0,    0,    0,    1,    0,    0,    0,    0)
seventh_chord <-
c(   1,    0,    0,    0,    1,    0,    0,    1,    0,    0,    1,    0)
major_key <-
c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88)
minor_key <-
c(6.33, 2.68, 3.52, 5.38, 2.60, 3.53, 2.54, 4.75, 3.98, 2.69, 3.34, 3.17)
chord_templates <-
tribble(
~name, ~template,
"Gb:7", circshift(seventh_chord, 6),
"Gb:maj", circshift(major_chord, 6),
"Bb:min", circshift(minor_chord, 10),
"Db:maj", circshift(major_chord, 1),
"F:min", circshift(minor_chord, 5),
"Ab:7", circshift(seventh_chord, 8),
"Ab:maj", circshift(major_chord, 8),
"C:min", circshift(minor_chord, 0),
"Eb:7", circshift(seventh_chord, 3),
"Eb:maj", circshift(major_chord, 3),
"G:min", circshift(minor_chord, 7),
"Bb:7", circshift(seventh_chord, 10),
"Bb:maj", circshift(major_chord, 10),
"D:min", circshift(minor_chord, 2),
"F:7", circshift(seventh_chord, 5),
"F:maj", circshift(major_chord, 5),
"A:min", circshift(minor_chord, 9),
"C:7", circshift(seventh_chord, 0),
"C:maj", circshift(major_chord, 0),
"E:min", circshift(minor_chord, 4),
"G:7", circshift(seventh_chord, 7),
"G:maj", circshift(major_chord, 7),
"B:min", circshift(minor_chord, 11),
"D:7", circshift(seventh_chord, 2),
"D:maj", circshift(major_chord, 2),
"F#:min", circshift(minor_chord, 6),
"A:7", circshift(seventh_chord, 9),
"A:maj", circshift(major_chord, 9),
"C#:min", circshift(minor_chord, 1),
"E:7", circshift(seventh_chord, 4),
"E:maj", circshift(major_chord, 4),
"G#:min", circshift(minor_chord, 8),
"B:7", circshift(seventh_chord, 11),
"B:maj", circshift(major_chord, 11),
"D#:min", circshift(minor_chord, 3)
)
key_templates <-
tribble(
~name, ~template,
"Gb:maj", circshift(major_key, 6),
"Bb:min", circshift(minor_key, 10),
"Db:maj", circshift(major_key, 1),
"F:min", circshift(minor_key, 5),
"Ab:maj", circshift(major_key, 8),
"C:min", circshift(minor_key, 0),
"Eb:maj", circshift(major_key, 3),
"G:min", circshift(minor_key, 7),
"Bb:maj", circshift(major_key, 10),
"D:min", circshift(minor_key, 2),
"F:maj", circshift(major_key, 5),
"A:min", circshift(minor_key, 9),
"C:maj", circshift(major_key, 0),
"E:min", circshift(minor_key, 4),
"G:maj", circshift(major_key, 7),
"B:min", circshift(minor_key, 11),
"D:maj", circshift(major_key, 2),
"F#:min", circshift(minor_key, 6),
"A:maj", circshift(major_key, 9),
"C#:min", circshift(minor_key, 1),
"E:maj", circshift(major_key, 4),
"G#:min", circshift(minor_key, 8),
"B:maj", circshift(major_key, 11),
"D#:min", circshift(minor_key, 3)
)
moonriver_key_est <- get_tidy_audio_analysis("1IRRqn75jaZHp7zMT1NGbZ") |>
compmus_align(bars, segments) |>
select(bars) |>
unnest(bars) |>
mutate(pitches = map(segments, compmus_summarise, pitches, method = "mean", norm = "euclidean"))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Reverse Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = 1 - d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Reverse Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
moonriver_key_est <- get_tidy_audio_analysis("1IRRqn75jaZHp7zMT1NGbZ") |>
compmus_align(beats, segments) |>
select(beats) |>
unnest(beats) |>
mutate(pitches = map(segments, compmus_summarise, pitches, method = "mean", norm = "euclidean"))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = 1 - d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = 1 - d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
moonriver_key_est <- get_tidy_audio_analysis("1IRRqn75jaZHp7zMT1NGbZ") |>
compmus_align(bars, segments) |>
select(bars) |>
unnest(bars) |>
mutate(pitches = map(segments, compmus_summarise, pitches, method = "mean", norm = "euclidean"))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = 1 - d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
library(tidyverse)
library(tidymodels)
library(compmus)
library(heatmaply)
library(protoclust)
library(cowplot)
library(spotifyr)
library(ggplot2)
library(plotly)
library(dplyr)
library(tidyverse)
library(tidymodels)
library(compmus)
library(heatmaply)
library(protoclust)
library(cowplot)
library(spotifyr)
library(ggplot2)
library(plotly)
library(dplyr)
djesse1 <- get_playlist_audio_features("", "55AhOVOznsMmppxhkhQeox")
djesse2 <- get_playlist_audio_features("", "2ySg6xH1guPJ6WacYBnEtE")
djesse3 <- get_playlist_audio_features("", "4y0xPsPUbwmsf32r8GiETo")
djesse4 <- get_playlist_audio_features("", "23CJn0kvWIvoEg6VlbGeGl")
all_albums <- bind_rows(djesse1, djesse2, djesse3, djesse4)
circshift <- function(v, n) {
if (n == 0) v else c(tail(v, n), head(v, -n))
}
#      C     C#    D     Eb    E     F     F#    G     Ab    A     Bb    B
major_chord <-
c(   1,    0,    0,    0,    1,    0,    0,    1,    0,    0,    0,    0)
minor_chord <-
c(   1,    0,    0,    1,    0,    0,    0,    1,    0,    0,    0,    0)
seventh_chord <-
c(   1,    0,    0,    0,    1,    0,    0,    1,    0,    0,    1,    0)
major_key <-
c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88)
minor_key <-
c(6.33, 2.68, 3.52, 5.38, 2.60, 3.53, 2.54, 4.75, 3.98, 2.69, 3.34, 3.17)
chord_templates <-
tribble(
~name, ~template,
"C:maj", circshift(major_chord, 0), "C:min", circshift(minor_chord, 0), "C:7", circshift(seventh_chord, 0),
"Db:maj", circshift(major_chord, 1), "Db:min", circshift(minor_chord, 1), "Db:7", circshift(seventh_chord, 1),
"D:maj", circshift(major_chord, 2), "D:min", circshift(minor_chord, 2), "D:7", circshift(seventh_chord, 2),
"Eb:maj", circshift(major_chord, 3), "Eb:min", circshift(minor_chord, 3), "Eb:7", circshift(seventh_chord, 3),
"E:maj", circshift(major_chord, 4), "E:min", circshift(minor_chord, 4), "E:7", circshift(seventh_chord, 4),
"F:maj", circshift(major_chord, 5), "F:min", circshift(minor_chord, 5), "F:7", circshift(seventh_chord, 5),
"F#:maj", circshift(major_chord, 6), "F#:min", circshift(minor_chord, 6), "F#:7", circshift(seventh_chord, 6),
"G:maj", circshift(major_chord, 7), "G:min", circshift(minor_chord, 7), "G:7", circshift(seventh_chord, 7),
"Ab:maj", circshift(major_chord, 8), "Ab:min", circshift(minor_chord, 8), "Ab:7", circshift(seventh_chord, 8),
"A:maj", circshift(major_chord, 9), "A:min", circshift(minor_chord, 9), "A:7", circshift(seventh_chord, 9),
"Bb:maj", circshift(major_chord, 10), "Bb:min", circshift(minor_chord, 10), "Bb:7", circshift(seventh_chord, 10),
"B:maj", circshift(major_chord, 11), "B:min", circshift(minor_chord, 11), "B:7", circshift(seventh_chord, 11)
)
moonriver_key_est <- get_tidy_audio_analysis("1IRRqn75jaZHp7zMT1NGbZ") |>
compmus_align(bars, segments) |>
select(bars) |>
unnest(bars) |>
mutate(pitches = map(segments, compmus_summarise, pitches, method = "mean", norm = "euclidean"))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = 1 - d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
energy_of_all <- ggplot(all_albums, aes(x=energy, fill=playlist_name, alpha = 0.3)) +
geom_density() +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
facet_wrap(~ factor(playlist_name, levels = c('Djesse Vol. 1', 'Djesse Vol. 2', 'Djesse Vol. 3', 'Djesse Vol. 4'))) +
theme_classic()
ggplotly(energy_of_all)
all_albums$mode <- as.factor(all_albums$mode)
key_labels_x <- c("C", "C#", "D", "Eb", "E", "F", "F#", "G", "Ab", "A", "Bb", "B")
mode_labels_y <- c("minor", "major")
mode_colors_y <- c("red", "blue")
theme_key_center <- theme(axis.text.x = element_text(hjust = 1),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.minor = element_line(color = "gray"),
plot.title = element_text(hjust = 0.5, margin = margin(b = 20))
)
key_center <- ggplot(all_albums, aes(x=key, fill=mode)) +
geom_histogram(binwidth = 1, color = "gray25") +
facet_wrap(~ factor(playlist_name, levels = c('Djesse Vol. 1', 'Djesse Vol. 2', 'Djesse Vol. 3', 'Djesse Vol. 4'))) +
scale_x_continuous(breaks = 0:11, labels = key_labels_x) +
scale_y_continuous(limits = c(0, 4)) +
scale_fill_manual(labels = mode_labels_y, values = mode_colors_y) +
expand_limits(x = c(0, 11)) +
ggtitle("Djesse Albums Key Centers") +
theme_key_center
ggplotly(key_center)
moonriver_chrome <- get_tidy_audio_analysis("1IRRqn75jaZHp7zMT1NGbZ") |>
select(segments) |>
unnest(segments) |>
select(start, duration, pitches)
moonriver_chrome_plot <- moonriver_chrome |>
mutate(pitches = map(pitches, compmus_normalise, "euclidean")) |>
compmus_gather_chroma() |>
ggplot(aes(x = start + duration / 2, width = duration, y = pitch_class, fill = value)) +
geom_tile() +
geom_vline(xintercept = 228, color = "red", size = 1.35) +
geom_vline(xintercept = 274, color = "red", size = 1.35) +
geom_vline(xintercept = 347, color = "red", size = 1.35) +
geom_vline(xintercept = 410, color = "red", size = 1.35) +
geom_vline(xintercept = 474, color = "red", size = 1.35) +
labs(x = "Time (s)", y = NULL, fill = "Magnitude", title = "Moonriver (Jacob Collier)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20))) +
scale_fill_viridis_c()
plot_grid(moonriver_chrome_plot, ncol = 1)
circshift <- function(v, n) {
if (n == 0) v else c(tail(v, n), head(v, -n))
}
#      C     C#    D     Eb    E     F     F#    G     Ab    A     Bb    B
major_chord <-
c(   1,    0,    0,    0,    1,    0,    0,    1,    0,    0,    0,    0)
minor_chord <-
c(   1,    0,    0,    1,    0,    0,    0,    1,    0,    0,    0,    0)
seventh_chord <-
c(   1,    0,    0,    0,    1,    0,    0,    1,    0,    0,    1,    0)
major_key <-
c(6.35, 2.23, 3.48, 2.33, 4.38, 4.09, 2.52, 5.19, 2.39, 3.66, 2.29, 2.88)
minor_key <-
c(6.33, 2.68, 3.52, 5.38, 2.60, 3.53, 2.54, 4.75, 3.98, 2.69, 3.34, 3.17)
chord_templates <-
tribble(
~name, ~template,
"C:maj", circshift(major_chord, 0), "C:min", circshift(minor_chord, 0), "C:7", circshift(seventh_chord, 0),
"Db:maj", circshift(major_chord, 1), "Db:min", circshift(minor_chord, 1), "Db:7", circshift(seventh_chord, 1),
"D:maj", circshift(major_chord, 2), "D:min", circshift(minor_chord, 2), "D:7", circshift(seventh_chord, 2),
"Eb:maj", circshift(major_chord, 3), "Eb:min", circshift(minor_chord, 3), "Eb:7", circshift(seventh_chord, 3),
"E:maj", circshift(major_chord, 4), "E:min", circshift(minor_chord, 4), "E:7", circshift(seventh_chord, 4),
"F:maj", circshift(major_chord, 5), "F:min", circshift(minor_chord, 5), "F:7", circshift(seventh_chord, 5),
"F#:maj", circshift(major_chord, 6), "F#:min", circshift(minor_chord, 6), "F#:7", circshift(seventh_chord, 6),
"G:maj", circshift(major_chord, 7), "G:min", circshift(minor_chord, 7), "G:7", circshift(seventh_chord, 7),
"Ab:maj", circshift(major_chord, 8), "Ab:min", circshift(minor_chord, 8), "Ab:7", circshift(seventh_chord, 8),
"A:maj", circshift(major_chord, 9), "A:min", circshift(minor_chord, 9), "A:7", circshift(seventh_chord, 9),
"Bb:maj", circshift(major_chord, 10), "Bb:min", circshift(minor_chord, 10), "Bb:7", circshift(seventh_chord, 10),
"B:maj", circshift(major_chord, 11), "B:min", circshift(minor_chord, 11), "B:7", circshift(seventh_chord, 11)
)
moonriver_key_est <- get_tidy_audio_analysis("1IRRqn75jaZHp7zMT1NGbZ") |>
compmus_align(bars, segments) |>
select(bars) |>
unnest(bars) |>
mutate(pitches = map(segments, compmus_summarise, pitches, method = "mean", norm = "euclidean"))
moonriver_key_est_plot <- moonriver_key_est |>
compmus_match_pitch_template(chord_templates, method = "euclidean", norm = "manhattan") |>
ggplot(aes(x = start + duration / 2, width = duration, y = name, fill = 1 - d)) +
geom_tile() +
scale_fill_viridis_c() +
theme_minimal() +
labs(x = "Time (s)", y = "", fill = "Magnitude", title = "Moonriver (Jacob Collier)") +
theme(plot.title = element_text(hjust = 0.5, margin = margin(b = 20, t = 20)))
plot_grid(moonriver_key_est_plot, ncol = 1)
sleeping_dreams <-
get_tidy_audio_analysis("4mTd21pyWajN252LcouVIm") |>
compmus_align(bars, segments) |>
select(bars) |>
unnest(bars) |>
mutate(pitches = map(segments, compmus_summarise, pitches, method = "rms", norm = "manhattan")) |>
mutate(timbre = map(segments, compmus_summarise, timbre, method = "rms", norm = "manhattan"))
sleeping_dreams_cepstogram <- sleeping_dreams |>
compmus_gather_timbre() |>
ggplot(aes(x = start + duration / 2, width = duration, y = basis, fill = value)) +
geom_tile() +
labs(x = "Time (s)", y = NULL, fill = "Magnitude") +
scale_fill_viridis_c() +
theme_classic()
sleeping_dreams_cepstogram
sleeping_dreams_pitches <- sleeping_dreams |>
compmus_self_similarity(pitches, "euclidean") |>
ggplot(aes(x = xstart + xduration / 2, width = xduration, y = ystart + yduration / 2, height = yduration, fill = d)) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x="", y="")
sleeping_dreams_timbre <- sleeping_dreams |>
compmus_self_similarity(timbre, "euclidean") |>
ggplot(aes(x = xstart + xduration / 2, width = xduration, y = ystart + yduration / 2, height = yduration, fill = d)) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x="", y="")
plot_grid(sleeping_dreams_pitches, sleeping_dreams_timbre, ncol=2, labels = c("Pitch", "Timbre"))
djesse_vol <- all_albums |> add_audio_analysis()
djesse_vol |>
mutate(sections =
map(sections, summarise_at,
vars(tempo, loudness, duration),
list(section_mean = mean, section_sd = sd)
)) |>
unnest(sections)
ggplot(djesse_vol, aes(x = tempo, y = tempo_section_sd, color = genre, alpha = loudness)) +
geom_point(aes(size = duration / 60)) +
geom_rug() +
theme_minimal() +
ylim(0, 5) +
labs(x = "Mean Tempo (bpm)", y = "SD Tempo", color = "Genre", size = "Duration (min)", alpha = "Volume (dBFS)")
ggplot(djesse_vol, aes(x = tempo, y = tempo_section_sd, color = playlist_name, alpha = loudness)) +
geom_point(aes(size = duration / 60)) +
geom_rug() +
theme_minimal() +
ylim(0, 5) +
labs(x = "Mean Tempo (bpm)", y = "SD Tempo", color = "Album name", size = "Duration (min)", alpha = "Volume (dBFS)")
djesse_vol <- all_albums |> add_audio_analysis()
djesse_vol <- all_albums |> add_audio_analysis()
djesse_vol |>
mutate(sections =
map(sections, summarise_at,
vars(tempo, loudness, duration),
list(section_mean = mean, section_sd = sd)
)) |>
unnest(sections) |>
ggplot(aes(x = tempo, y = tempo_section_sd, color = playlist_name, alpha = loudness)) +
geom_point(aes(size = duration / 60)) +
geom_rug() +
theme_minimal() +
ylim(0, 5) +
labs(x = "Mean Tempo (bpm)", y = "SD Tempo", color = "Album name", size = "Duration (min)", alpha = "Volume (dBFS)")
djesse_vol |>
mutate(sections =
map(sections, summarise_at,
vars(tempo, loudness, duration),
list(section_mean = mean, section_sd = sd)
)) |>
unnest(sections) |>
ggplot(aes(x = tempo, y = tempo_section_sd, color = playlist_name, alpha = loudness)) +
geom_point(aes(size = duration / 60)) +
geom_rug() +
facet_wrap(~ factor(playlist_name, levels = c('Djesse Vol. 1', 'Djesse Vol. 2', 'Djesse Vol. 3', 'Djesse Vol. 4'))) +
theme_minimal() +
ylim(0, 5) +
labs(x = "Mean Tempo (bpm)", y = "SD Tempo", color = "Album name", size = "Duration (min)", alpha = "Volume (dBFS)")
djesse_vol |>
mutate(sections =
map(sections, summarise_at,
vars(tempo, loudness, duration),
list(section_mean = mean, section_sd = sd)
)) |>
unnest(sections) |>
ggplotly(ggplot(aes(x = tempo, y = tempo_section_sd, color = playlist_name, alpha = loudness)) +
geom_point(aes(size = duration / 60)) +
geom_rug() +
facet_wrap(~ factor(playlist_name, levels = c('Djesse Vol. 1', 'Djesse Vol. 2', 'Djesse Vol. 3', 'Djesse Vol. 4'))) +
theme_minimal() +
ylim(0, 5) +
labs(x = "Mean Tempo (bpm)", y = "SD Tempo", color = "Album name", size = "Duration (min)", alpha = "Volume (dBFS)"))
djesse_vol |>
mutate(sections =
map(sections, summarise_at,
vars(tempo, loudness, duration),
list(section_mean = mean, section_sd = sd)
)) |>
unnest(sections) |>
ggplot(aes(x = tempo, y = tempo_section_sd, color = playlist_name, alpha = loudness)) +
geom_point(aes(size = duration / 60)) +
geom_rug() +
facet_wrap(~ factor(playlist_name, levels = c('Djesse Vol. 1', 'Djesse Vol. 2', 'Djesse Vol. 3', 'Djesse Vol. 4'))) +
theme_minimal() +
ylim(0, 5) +
labs(x = "Mean Tempo (bpm)", y = "SD Tempo", color = "Album name", size = "Duration (min)", alpha = "Volume (dBFS)")
djesse_vol <- djesse_vol |>
mutate(sections =
map(sections, summarise_at,
vars(tempo, loudness, duration),
list(section_mean = mean, section_sd = sd)
)) |>
unnest(sections) |>
ggplot(aes(x = tempo, y = tempo_section_sd, color = playlist_name, alpha = loudness)) +
geom_point(aes(size = duration / 60)) +
geom_rug() +
facet_wrap(~ factor(playlist_name, levels = c('Djesse Vol. 1', 'Djesse Vol. 2', 'Djesse Vol. 3', 'Djesse Vol. 4'))) +
theme_minimal() +
ylim(0, 5) +
labs(x = "Mean Tempo (bpm)", y = "SD Tempo", color = "Album name", size = "Duration (min)", alpha = "Volume (dBFS)")
djesse_vol
library(tidyverse)
library(tidymodels)
library(compmus)
library(heatmaply)
library(protoclust)
library(cowplot)
library(spotifyr)
library(ggplot2)
library(plotly)
library(dplyr)
box_stars <- get_tidy_audio_analysis("232QdHfiXCR7dqhScytiYN")
box_stars |>
tempogram(window_size = 8, hop_size = 1, cyclic = FALSE) |>
ggplot(aes(x = time, y = bpm, fill = power)) +
geom_raster() +
scale_fill_viridis_c(guide = "none") +
labs(x = "Time (s)", y = "Tempo (BPM)") +
theme_classic()
